Act as a professional full-stack web developer with expertise in creating modern, responsive, and interactive web applications for restaurant businesses. I need you to build a fully functional, well-optimized, secure, and easily maintainable Restaurant Menu Website based on the following key requirements:

Core Features:
Admin Dashboard with Login Authentication
Admin login page similar to the HTML/CSS/JS structure provided below.
Secure password storage (hashing recommended) and simple local storage or session-based authentication for now.
Admin functions: Add, Edit, Delete menu items.
Categories: Appetizers, Main Courses, Desserts, Drinks (as dropdowns).
Display total orders, total revenue, and recent orders summary.
User Interface (Menu Page)
Clean, visually appealing UI design, inspired by Kenyan-themed elements.
Interactive menu with category filtering.
Search functionality (JS-based).
Fully responsive across devices.
Functionalities
Smooth animations when filtering/sorting.
Real-time menu updates reflecting admin changes.
Light/Dark Mode toggle.
Technical Stack:
Frontend: HTML5, CSS3 (preferably with Flexbox/Grid), Vanilla JavaScript (no frameworks).
Backend Simulation: Use JavaScript localStorage or JSON server for mock backend to simulate order placement & menu item management (optional but preferred).
Performance Optimizations: Minimized CSS/JS files, lazy loading images.
Accessibility:
WCAG guidelines compliance (semantic HTML tags, ARIA roles, contrast).
Security:
Input validations (client-side).
Basic protection against XSS (escaping outputs).
SEO Optimized:
Proper meta tags, mobile-first design, descriptive headings, alt attributes.
Admin Dashboard Code Sample:
Use the following base structure for admin dashboard login & content:
html
Copy
Edit
(Insert your provided HTML Admin Dashboard code here â€“ as you've done above.)
Add AI Integrations (Optional Advanced Features):
Chatbot assistant on the website for customers.
Menu item recommendation based on popular orders (mocked with JavaScript).
Deliverables:
Complete, ready-to-deploy HTML, CSS, and JS files.
Well-structured, commented code.
Documentation on how admin can log in and update menu items.
Any suggestions for future backend integration (PHP/Node.js API).
Ensure the design is modern, professional, and clean, but the code remains easy to understand and modify. Prioritize functionality and user experience